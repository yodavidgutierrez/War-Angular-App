{"version":3,"file":"actions.js","sourceRoot":"","sources":["../../src/actions.ts"],"names":[],"mappings":"AASA,MAAM,CAAC,IAAM,aAAa,GAAG;IAC3B,EAAE,EAAE,aAAa;IACjB,OAAO,EAAE,kBAAkB;IAC3B,MAAM,EAAE,iBAAiB;IACzB,IAAI,EAAE,eAAe;IACrB,IAAI,EAAE,eAAe;IACrB,OAAO,EAAE,kBAAkB;IAC3B,eAAe,EAAE,0BAA0B;CAC5C,CAAC;AAEF,MAAM,CAAC,IAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,aAAa,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;AAE3F,MAAM,aAAa,IAAkB,EAAE,KAAW,EAAE,MAAyB;IAC3E,IAAM,OAAO,GAAqB,EAAE,IAAI,MAAA,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,CAAC;IAE1D,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,EAAE,EAAE,OAAO,SAAA,EAAE,CAAC;AAC7C,CAAC;AAED,MAAM,kBAAkB,IAAkB,EAAE,KAAW,EAAE,MAAyB;IAChF,IAAM,OAAO,GAAqB,EAAE,IAAI,MAAA,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,CAAC;IAE1D,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,OAAO,EAAE,OAAO,SAAA,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,iBAAiB,KAAU,EAAE,MAAyB;IAC1D,IAAM,OAAO,GAAqB,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,CAAC;IAEpD,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,MAAM,EAAE,OAAO,SAAA,EAAE,CAAC;AACjD,CAAC;AAED,MAAM,eAAe,IAAkB,EAAE,KAAW,EAAE,MAAyB;IAC7E,IAAM,OAAO,GAAqB,EAAE,IAAI,MAAA,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,CAAC;IAE1D,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,IAAI,EAAE,OAAO,SAAA,EAAE,CAAC;AAC/C,CAAC;AAED,MAAM;IACJ,IAAM,OAAO,GAAqB,EAAG,CAAC;IAEtC,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,IAAI,EAAE,OAAO,SAAA,EAAE,CAAC;AAC/C,CAAC;AAED,MAAM;IACJ,IAAM,OAAO,GAAqB,EAAG,CAAC;IAEtC,MAAM,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,OAAO,EAAE,OAAO,SAAA,EAAE,CAAC;AAClD,CAAC","sourcesContent":["import { Action } from '@ngrx/store';\nimport { NavigationExtras } from '@angular/router';\n\nexport interface RouterMethodCall {\n  path?: string | any[];\n  query?: any;\n  extras?: NavigationExtras;\n}\n\nexport const routerActions = {\n  GO: '[Router] Go',\n  REPLACE: '[Router] Replace',\n  SEARCH: '[Router] Search',\n  SHOW: '[Router] Show',\n  BACK: '[Router] Back',\n  FORWARD: '[Router] Forward',\n  UPDATE_LOCATION: '[Router] Update Location'\n};\n\nexport const routerActionTypes = Object.keys(routerActions).map(key => routerActions[key]);\n\nexport function go(path: string|any[], query?: any, extras?: NavigationExtras): Action {\n  const payload: RouterMethodCall = { path, query, extras };\n\n  return { type: routerActions.GO, payload };\n}\n\nexport function replace(path: string|any[], query?: any, extras?: NavigationExtras): Action {\n  const payload: RouterMethodCall = { path, query, extras };\n\n  return { type: routerActions.REPLACE, payload };\n}\n\nexport function search(query: any, extras?: NavigationExtras): Action {\n  const payload: RouterMethodCall = { query, extras };\n\n  return { type: routerActions.SEARCH, payload };\n}\n\nexport function show(path: string|any[], query?: any, extras?: NavigationExtras): Action {\n  const payload: RouterMethodCall = { path, query, extras };\n\n  return { type: routerActions.SHOW, payload };\n}\n\nexport function back(): Action {\n  const payload: RouterMethodCall = { };\n\n  return { type: routerActions.BACK, payload };\n}\n\nexport function forward(): Action {\n  const payload: RouterMethodCall = { };\n\n  return { type: routerActions.FORWARD, payload };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}